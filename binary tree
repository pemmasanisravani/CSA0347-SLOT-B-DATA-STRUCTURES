#include <stdio.h>
#include<conio.h>
#include <stdlib.h>
struct TreeNode 
{
int data;
struct TreeNode* left;
struct TreeNode* right;
};
struct TreeNode* createNode(int data) 
{
struct TreeNode* newNode = (struct TreeNode*)malloc(sizeof(struct TreeNode));
newNode->data = data;
newNode->left = NULL;
newNode->right = NULL;
return newNode;
}
struct TreeNode* insert(struct TreeNode* root, int data) 
{
if (root == NULL) 
{
return createNode(data);
}
if (data < root->data) 
{
root->left = insert(root->left, data);
} 
else if (data > root->data) 
{
root->right = insert(root->right, data);
}
return root;
}
void inOrderTraversal(struct TreeNode* root) {
if (root != NULL) {
inOrderTraversal(root->left);
printf("%d ", root->data);
inOrderTraversal(root->right);
}
}
int main() 
{
struct TreeNode* root = NULL;
root = insert(root, 50);
root = insert(root, 30);
root = insert(root, 20);
root = insert(root, 40);
root = insert(root, 70);
root = insert(root, 60);
root = insert(root, 80);
printf("In-order traversal of the binary tree: ");
inOrderTraversal(root);
printf("\n");
getch();
return 0;
}
